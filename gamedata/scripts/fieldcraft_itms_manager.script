------------------------------------
-- Fieldcraft Crafting Overhaul - on_item_use manager
------------------------------------


local function actor_on_item_use(obj)

	--------------------------------------------------
	--FieldCraft Crafting Overhaul SECTION------------
	--------------------------------------------------
	if (obj:section() == "survivalguide") then
		local hud = get_hud()
		hud:HideActorMenu()
		local ui = ui_itm_fieldcraft_guide and ui_itm_fieldcraft_guide.crafting_ui(hud,obj:section())
		if (ui) then
			ui:ShowDialog(true)
			ui:FillPartsList()
		end
	end
	
	----------------PACKAGES--------------------------
	if (obj:section() == "fieldcraft_pkg_medkit_4") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "medkit"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_backpack_3") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "itm_backpack"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_sleepbag_3") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "itm_sleepbag"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_ied_4") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "ied"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_iedrpg_3") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "ied_rpg"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_mine_3") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "mine"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_plate_attch_5") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "fieldcraft_plate_attch"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		--get tool (hammer) back
		alife():create("hammer_inv", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())		
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_army_bowler_5") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "army_bowler"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		--get tool (hammer) back
		alife():create("hammer_inv", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())		
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_toolkit_p_6") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "toolkit_p"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_toolkit_s_8") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "toolkit_s"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_toolkit_r5_9") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "toolkit_r5"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	if (obj:section() == "fieldcraft_pkg_toolkit_r7_10") then
		actor_effects.use_item("toolkit_p_dummy")
		local fieldcrafted_item = "toolkit_r7"
		local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
		alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		local function set_hud_msg(message)
			SetHudMsg(message, 5)
			return true
		end
		CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
	end
	
	
	if (obj:section() == "fieldcraft_pkg_stimpack_6") then
		if (campfire_cook()) then
			actor_effects.use_item("fieldcooker_dummy")
			local fieldcrafted_item = "stimpack"
			local fieldcrafted_inv_name = game.translate_string(rx_utils.read_from_ini2(nil,fieldcrafted_item,"inv_name","string","error"))
			alife():create(fieldcrafted_item, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
			--get tool (cutlery) back
			alife():create("cutlery", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
			local function set_hud_msg(message)
				SetHudMsg(message, 5)
				return true
			end
			CreateTimeEvent("create_parts","create_parts_timer",80,set_hud_msg,"You have crafted an item: "..fieldcrafted_inv_name)
		else
			alife():create("fieldcraft_pkg_stimpack_6",db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
			local text = "You need to stand near the fireplace to craft this"
			SetHudMsg(text,3)
		end
	end
	
	----------------PACKAGES END---------------------
	
	-- give empty syringe on use 
	if (obj:section() == "morphine") or (obj:section() == "salicidic_acid") or (obj:section() == "adrenalin") or (obj:section() == "glucose_s") or (obj:section() == "glucose") or (obj:section() == "tetanus") or (obj:section() == "stimpack") or (obj:section() == "stimpack_army") or (obj:section() == "stimpack_scientic") or (obj:section() == "analgetic") then
		alife():create("syringe_empty", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	end
	
	-------------------------------------------------
	--FieldCraft Crafting Overhaul SECTION END-----------
	--------------------------------------------------

end

function campfire_cook()
	for i=1,65535 do
		local zx = alife():object(i)
		if zx then
			local zn = level.object_by_id(zx.id)
			if zn then
				local cfm = zn:get_campfire()
				if cfm and zn:position():distance_to(db.actor:position()) < 1.5 then
					if (cfm:is_on()) then 
						return true
					else
						return false
					end
					return false
				end
			end
		end
	end
end

function on_game_start()
	RegisterScriptCallback("actor_on_item_use",actor_on_item_use)
end




