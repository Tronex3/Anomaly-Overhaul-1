--\\ AWR (Conditions для диалогов)
function awr_if_actor_has_full_vodka2(first_speaker, second_speaker)
	return db.actor:object("vodka2") ~= nil
end

function awr_give_full_vodka2(first_speaker, second_speaker)
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka2")
end

function awr_if_actor_has_1000(first_speaker, second_speaker)
	return MLR_utils.act_h_m(1000)
end 

function awr_give_1000(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 1000)
end

function awr_if_actor_has_2_full_vodka2(first_speaker, second_speaker)
	local count = 0
	local function calc(actor,obj)
		if string.match(obj:section(), "vodka2") then
			count = count + 1
		end
	end	
	db.actor:iterate_inventory(calc, db.actor)
	return count >= 2
end 

function awr_give_2_full_vodka2(first_speaker, second_speaker)
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka2", 2)
end

function awr_actor_have_money(first_speaker, second_speaker)
	return first_speaker:money() >= 10000
end

function awr_actor_give_money(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 10000)
end

function awr_timer_msg_on(first_speaker, second_speaker)
	local npc = dialogs.who_is_npc(first_speaker, second_speaker)
	local npc_name = npc:section()
	awr_shared_functions.SendAwrMsg('success', 'detail', "st_awr_timer_msg_on")
	awr_shared_functions.LampOn(npc_name)
	awr_shared_functions.dout('dialogs', "Start timer")
	db.actor:give_info_portion(string.format('awr_%s_access', npc_name))
	if db.actor:has_info(string.format('awr_%s_access', npc_name)) then
		awr_shared_functions.dout('dialogs', "Infoportion awr_%s_access received", npc_name)
	end
end

function awr_on_table(first_speaker, second_speaker)
	local npc = dialogs.who_is_npc(first_speaker, second_speaker)
	local npc_name = npc:section()
	if db.actor:has_info(string.format("awr_%s_on_table", npc_name)) then
		awr_shared_functions.dout('dialogs', "Infoportion awr_%s_on_table exist", npc_name)
		return true
	end
end

function awr_not_on_table(first_speaker, second_speaker)
	local npc = dialogs.who_is_npc(first_speaker, second_speaker)
	local npc_name = npc:section()
	if not (db.actor:has_info(string.format("awr_%s_on_table", npc_name))) then
		awr_shared_functions.dout('dialogs', "Infoportion awr_%s_on_table not exist", npc_name)
		return true
	end
end

function awr_take_details(first_speaker, second_speaker)
	local awr_sf = awr_shared_functions
	local inv = awr_sf.iterate_inv()
	local t = { good=0, worn=0, rusty=0 }
	local to_sell = {}

	for _, k in ipairs(inv) do
		if awr_sf.IsDetail(k,'rusty') then
			t.rusty = t.rusty + 60
			to_sell[k] = to_sell[k] and to_sell[k] + 1 or 1
		elseif awr_sf.IsDetail(k,'worn') then
			if k:match('barrel') then
				t.worn = t.worn + 150
			else
				t.worn = t.worn + 125
			end
			to_sell[k] = to_sell[k] and to_sell[k] + 1 or 1
		elseif awr_sf.IsDetail(k,'good') then
			if k:match('barrel') then
				t.good = t.good + 300
			else
				t.good = t.good + 250
			end
			to_sell[k] = to_sell[k] and to_sell[k] + 1 or 1
		end
	end

	for k,v in pairs(to_sell) do
		dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, k, v)
	end
		
	local result_money = t.good + t.worn + t.rusty
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, result_money)
end



function give_look_for_cs_history_part_4()
   task_manager.get_task_manager():give_task("task_look_for_cs_history_part_4")
end

function give_look_for_cs_history_part_3()
   task_manager.get_task_manager():give_task("task_look_for_cs_history_part_3")
end

function give_look_for_cs_history_part_2()
   task_manager.get_task_manager():give_task("task_look_for_cs_history_part_2")
end

function give_look_for_cs_history_part_1()
   task_manager.get_task_manager():give_task("task_look_for_cs_history_part_1")
end

function total_battle_1_random()
db.actor:give_info_portion(random_choice("total_fight_1_1", "total_fight_1_2", "total_fight_1_3", "total_fight_1_4", "total_fight_1_5"))
end

function total_battle_3_random()
db.actor:give_info_portion(random_choice("total_fight_3_1", "total_fight_3_2", "total_fight_3_3", "total_fight_3_4", "total_fight_3_5"))
end

function total_battle_4_random()
db.actor:give_info_portion(random_choice("total_fight_4_1", "total_fight_4_2", "total_fight_4_3", "total_fight_4_4", "total_fight_4_5"))
end

function total_battle_5_random()
db.actor:give_info_portion(random_choice("total_fight_5_1", "total_fight_5_2", "total_fight_5_3"))
end

function total_battle_6_random()
db.actor:give_info_portion(random_choice("total_fight_6_1", "total_fight_6_2", "total_fight_6_3"))
end

function total_battle_7_random()
db.actor:give_info_portion(random_choice("total_fight_7_1", "total_fight_7_2", "total_fight_7_3"))
end

function total_battle_9_random()
db.actor:give_info_portion(random_choice("total_fight_9_1", "total_fight_9_2", "total_fight_9_3"))
end
function give_task_fanat_kmb_1()
   task_manager.get_task_manager():give_task("task_fanat_kmb_1")
end

function give_task_fanat_kmb_2()
   task_manager.get_task_manager():give_task("task_fanat_kmb_2")
end

function give_task_fanat_kmb_3()
   task_manager.get_task_manager():give_task("task_fanat_kmb_3")
end

function give_gar_4_2_zombie_mlr_squad()
   task_manager.get_task_manager():give_task("gar_4_2_zombie_mlr_squad")
end

function give_task_noah_1()
   task_manager.get_task_manager():give_task("task_noah_1")
end

function give_task_noah_2()
   task_manager.get_task_manager():give_task("task_noah_2")
end

function request_to_fly(actor)
	local rank = ranks.get_obj_rank_name(actor)
	if (rank == "professional" or rank == "veteran" or rank == "expert" or rank == "master" or rank == "legend") then
     return true
   else
     return false
   end
end

function request_to_trade(actor)
	local rank = ranks.get_obj_rank_name(actor)
	if (rank == "experienced" or rank == "professional" or rank == "veteran" or rank == "expert" or rank == "master" or rank == "legend") then
     return true
   else
     return false
   end
end

function request_to_no_trade(actor)
	local rank = ranks.get_obj_rank_name(actor)
	if (rank == "novice" or rank == "trainee") then
     return true
   else
     return false
   end
end

--function check_novice(first_speaker, second_speaker)
--local actor = dialogs.who_is_actor(first_speaker, second_speaker)
--local npc = dialogs.who_is_npc(first_speaker, second_speaker)
--local rank = ranks.get_obj_rank_name(npc)
--return (rank == "novice" or rank == "trainee" or rank == "experienced")
--end

-- Всё, что касается группировок

function check_monolith(first_speaker, second_speaker)
local actor = dialogs.who_is_actor(first_speaker, second_speaker)
local npc = dialogs.who_is_npc(first_speaker, second_speaker)
return xr_conditions.npc_community(actor, npc, {"monolith"})
end

function check_no_dolg()
  if character_community(db.actor) ~= 'actor_dolg' then
     return true
   else
     return false
   end
end
function check_dolg()
  if character_community(db.actor) == 'actor_dolg' then
     return true
   else
     return false
   end
end
function check_no_neutral()
  if character_community(db.actor) ~= 'actor_stalker' then
     return true
   else
     return false
   end
end
function check_no_freedom()
  if character_community(db.actor) ~= 'actor_freedom' then
     return true
   else
     return false
   end
end
function check_freedom()
  if character_community(db.actor) == 'actor_freedom' then
     return true
   else
     return false
   end
end
function check_no_csky()
  if character_community(db.actor) ~= 'actor_csky' then
     return true
   else
     return false
   end
end
function check_no_ecolog()
  if character_community(db.actor) ~= 'actor_ecolog' then
     return true
   else
     return false
   end
end
function check_no_army()
  if character_community(db.actor) ~= 'actor_army' then
     return true
   else
     return false
   end
end
function check_no_bandit()
  if character_community(db.actor) ~= 'actor_bandit' then
     return true
   else
     return false
   end
end
function check_no_zombied()
  if character_community(db.actor) ~= 'actor_zombied' then
     return true
   else
     return false
   end
end
function check_no_killer()
  if character_community(db.actor) ~= 'actor_killer' then
     return true
   else
     return false
   end
end
function check_killer()
  if character_community(db.actor) == 'actor_killer' then
     return true
   else
     return false
   end
end
function check_no_monolith()
  if character_community(db.actor) ~= 'actor_monolith' then
     return true
   else
     return false
   end
end

-- Конец

function give_task_devushka_1()
	mlr_utils.give_task('devushka_1_give')
end

function give_task_devushka_3()
	mlr_utils.give_task('devushka_3_give')
end

function give_task_devushka_4()
	mlr_utils.give_task('devushka_4_give')
end

function give_task_devushka_5()
	mlr_utils.give_task('devushka_5_give')
end

function give_task_devushka_help_1()
	mlr_utils.give_task('devushka_help_1_give')
end

function give_task_devushka_help_2()
	mlr_utils.give_task('devushka_help_2_give')
end

function devushka_1_has()
    if db.actor:object("wpn_toz34_mark4") then
        return true
    end
    return false
end
function devushka_1_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "wpn_toz34_mark4")
end

function devushka_2_has()
    if db.actor:object("ammo_12x70_buck") then
        return true
    end
    return false
end

function devushka_2_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "ammo_12x70_buck")
end

function devushka_31_has()
    if db.actor:object("af_vyvert") then
        return true
    end
    return false
end
function devushka_32_has()
    if db.actor:object("af_fireball") then
        return true
    end
    return false
end
function devushka_33_has()
    if db.actor:object("af_electra_moonlight") then
        return true
    end
    return false
end

function devushka_31_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_vyvert")
end

function devushka_32_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_fireball")
end

function devushka_33_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_electra_moonlight")
end

function devushka_3_done_money(first_speaker, second_speaker) 
 	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 10000)
end

function devushka_1_info()
    news_manager.send_tip(db.actor, "Take me to the campfire at the rookie village, please.", 3, "hip", 11000, 1)
end

function devushka_2_info()
    news_manager.send_tip(db.actor, "Stalker died: Yuri Semetskiy. Cause of death: Meat Grinder anomaly. Location: Dark Valley.", 3, "deth", 11000, 1)
	news_manager.send_tip(db.actor, "О, Semetskiy hooves recline. just for luck, not otherwise.", 10, "hip", 11000, 1)
end

function devushka_3_info()
    news_manager.send_tip(db.actor, "Hey, Barman here. I contacted Miklukha, and he's already dealt with those scumbags. Nobody will chase after Hip anymore.", 3, "barman", 11000, 1)
	news_manager.send_tip(db.actor, "Finally, those bastards got what they deserved.", 10, "hip", 11000, 1)
end

function devushka_4_info()
    news_manager.send_tip(db.actor, "This is Miklukha. I found the jerks. Don't worry. I gave them a valuable lesson. No one will go after Hip anymore.", 3, "freedom2", 11000, 1)
	news_manager.send_tip(db.actor, "Finally, those assholes got what they deserved.", 10, "hip", 11000, 1)
end

function devushka_4_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "beer", "in")
end

function devushka_5_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "marijuana", "in")
end

function give_hip_tushonka(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "conserva")
end

function give_devushka_medved(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "detector_advanced")
end

function actor_has_tushonka()
    if db.actor:object("conserva") then
        return true
    end
    return false
end

function actor_has_medved()
    if db.actor:object("detector_advanced") then
        return true
    end
    return false
end


function poluchit_po_litsu(actor, npc)                                            
    npc:force_set_goodwill(-5000, actor)
end

function devushka_3_has_money(first_speaker, second_speaker)
    return first_speaker:money() >= 10000
end

function devushka_help_1_has(first_speaker, second_speaker)
	local item_sections = {
		["artefact_container"] = 3}
 
	local function calc(temp, item)
		local sect = item:section()
		if item_sections[sect] and item_sections[sect]>0 then
			if item_sections[sect]==1 then
				item_sections[sect] = nil
			else
				item_sections[sect] = item_sections[sect] - 1
			end
		end
	end
 
	db.actor:iterate_inventory(calc, db.actor)
	return next(item_sections)==nil
end 

function devushka_help_2_has(first_speaker, second_speaker)
	local item_sections = {
		["medkit_ai3"] = 2}
 
	local function calc(temp, item)
		local sect = item:section()
		if item_sections[sect] and item_sections[sect]>0 then
			if item_sections[sect]==1 then
				item_sections[sect] = nil
			else
				item_sections[sect] = item_sections[sect] - 1
			end
		end
	end
 
	db.actor:iterate_inventory(calc, db.actor)
	return next(item_sections)==nil
end 

function hip_moovie_1(npc, actor)
	npc:stop_talk()
	actor:stop_talk()
	xr_effects.enable_ui(db.actor, db.actor)	  
	game.start_tutorial("hip_1")
end

function barmen_give_container(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "artefact_container", "in", 3) 
end

function devushka_give_present(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_gold_fish", "in", 1) 
end

function mikluha_give_medkit_bags(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "medkit_ai3", "in", 2) 
end

function devushka_help_1_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "artefact_container", 3)
end

function devushka_help_2_done(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "medkit_ai3", 2)
end

-- Начало Change Level
function ds_soviet_store(actor,npc,p)
MLR_utils.ch_lvl('ds_soviet_store')
end
function zat_trash_station(actor,npc,p)
MLR_utils.ch_lvl('zat_trash_station')
end
function mil_to_yant_on_heli(actor,npc,p)
MLR_utils.ch_lvl('mil_to_yant_on_heli')
end
function jup_guid_bandit_cont(actor,npc,p)
MLR_utils.ch_lvl('jup_guid_bandit_cont')
end
function red_forest_guid_mon(actor,npc,p)
MLR_utils.ch_lvl('red_forest_guid_mon')
end
function l11_pripyat_guid_mon(actor,npc,p)
MLR_utils.ch_lvl('l11_pripyat_guid_mon')
end
function pripyat_guid_mon(actor,npc,p)
MLR_utils.ch_lvl('pripyat_guid_mon')
end
function jupiter_guid_mon(actor,npc,p)
MLR_utils.ch_lvl('jupiter_guid_mon')
end
function escp_guid_mil_speed(actor,npc,p)
MLR_utils.ch_lvl('escp_guid_mil_speed')
end
function agroprom_guid_military(actor,npc,p)
MLR_utils.ch_lvl('agroprom_guid_military')
end
function escape_guid_military(actor,npc,p)
MLR_utils.ch_lvl('escape_guid_military')
end
function darkscape_guid_military(actor,npc,p)
MLR_utils.ch_lvl('darkscape_guid_military')
end
function jup_bunker_guid(actor,npc,p)
MLR_utils.ch_lvl('jup_bunker_guid')
end
function agroprom_guid(actor,npc,p)
MLR_utils.ch_lvl('agroprom_guid')
end
function marsh_guid(actor,npc,p)
MLR_utils.ch_lvl('marsh_guid')
end
function escape_village_guid(actor,npc,p)
MLR_utils.ch_lvl('escape_village_guid')
end
function trucks_cemetery_guid(actor,npc,p)
MLR_utils.ch_lvl('trucks_cemetery_guid')
end
function stancia_guid(actor,npc,p)
MLR_utils.ch_lvl('stancia_guid')
end
function pripyat_2_guid(actor,npc,p)
MLR_utils.ch_lvl('pripyat_2_guid')
end
function radar_guid(actor,npc,p)
MLR_utils.ch_lvl('radar_guid')
end
function jupiter_underground_2_guid(actor,npc,p)
MLR_utils.ch_lvl('jupiter_underground_2_guid')
end
function zaton_guid(actor,npc,p)
MLR_utils.ch_lvl('zaton_guid')
end
function pripyat_guid(actor,npc,p)
MLR_utils.ch_lvl('pripyat_guid')
end
function l11_pripyat_guid(actor,npc,p)
MLR_utils.ch_lvl('l11_pripyat_guid')
end
function red_forest_guid(actor,npc,p)
MLR_utils.ch_lvl('red_forest_guid')
end
function l05_bar_guid(actor,npc,p)
MLR_utils.ch_lvl('l05_bar_guid')
end
function jupiter_underground_guid(actor,npc,p)
MLR_utils.ch_lvl('jupiter_underground_guid')
end
function yantar_guid(actor,npc,p)
MLR_utils.ch_lvl('yantar_guid')
end
function military_guid(actor,npc,p)
MLR_utils.ch_lvl('military_guid')
end
function garbage_guid(actor,npc,p)
MLR_utils.ch_lvl('garbage_guid')
end
function escape_guid(actor,npc,p)
MLR_utils.ch_lvl('escape_guid')
end
function jupiter_guid(actor,npc,p)
MLR_utils.ch_lvl('jupiter_guid')
end
function yantar_guid_from_freedom_base(actor,npc,p)
MLR_utils.ch_lvl('yantar_guid_from_freedom_base')
end
-- Конец Change Level



-- Начало прекондишнов на бабло
function totaliz_1()
	return MLR_utils.act_h_m(1000)
end
function totaliz_2()
	return MLR_utils.act_h_m(2500)
end
function totaliz_5()
	return MLR_utils.act_h_m(5000)
end

-- ================================== Modified by Tronex ====================================
-- Last modification: 2017/12/20
-- ==========================================================================================
--> pre-condition prices of Snitch
function inf_trader_buy_transitions1()
	return MLR_utils.act_h_m(7000)
end
function inf_trader_buy_transitions2()
	return MLR_utils.act_h_m(11000)
end
function inf_trader_buy_transitions3()
	return MLR_utils.act_h_m(9000)
end
function inf_trader_buy_transitions4()
	return MLR_utils.act_h_m(9000)
end
function inf_trader_buy_transitions5()
	return MLR_utils.act_h_m(30000)
end
function inf_trader_buy_transitions6()
	return MLR_utils.act_h_m(35000)
end
------------------------------------------

function have_money_to_tech_yard_guid_marsh()
	return MLR_utils.act_h_m(800)
end
function have_money_to_marsh_post_guid_marsh()
	return MLR_utils.act_h_m(300)
end
function have_money_to_marsh_pump_water_guid_marsh()
	return MLR_utils.act_h_m(500)
end
function have_money_to_garbage_guid_bar()
	return MLR_utils.act_h_m(700)
end
function have_money_to_military_guid_bar()
	return MLR_utils.act_h_m(1000)
end
function have_money_to_jupiter_underground_guid_jup()
	return MLR_utils.act_h_m(1500)
end
function have_money_to_zaton_guid_jup()
	return MLR_utils.act_h_m(2000)
end
function have_money_to_red_forest_guid_jup()
	return MLR_utils.act_h_m(2500)
end
function have_money_darkscape_guid_military()
	return MLR_utils.act_h_m(3000)
end
function have_money_to_escape_guid_bar()
	return MLR_utils.act_h_m(3000)
end
function have_money_to_yantar_guid_bar()
	return MLR_utils.act_h_m(3500)
end
function have_money_to_pripyat_guid_jup()
	return MLR_utils.act_h_m(4000)
end
function have_money_to_escp_guid_mil()
	return MLR_utils.act_h_m(4500)
end
function have_money_agroprom_guid_military()
	return MLR_utils.act_h_m(5000)
end
function have_money_to_pripyat_guid_zat()
	return MLR_utils.act_h_m(5000)
end
function have_money_to_jupiter_guid_bar()
	return MLR_utils.act_h_m(6000)
end
function have_pri_special_trader_mlr_2()
	return MLR_utils.act_h_m(6500)
end
function have_mil_to_yant_on_heli2()
	return MLR_utils.act_h_m(7000)
end
function have_pri_special_trader_mlr_3()
	return MLR_utils.act_h_m(7000)
end
function have_money_to_radar_guid_pri()
	return MLR_utils.act_h_m(8000)
end
function have_pri_special_trader_mlr_1()
	return MLR_utils.act_h_m(8000)
end
function have_pri_special_trader_mlr_4()
	return MLR_utils.act_h_m(9500)
end
function have_mil_to_yant_on_heli()
	return MLR_utils.act_h_m(10000)
end
function have_pri_special_trader_mlr_5()
	return MLR_utils.act_h_m(11000)
end
function have_pri_special_trader_mlr_8()
	return MLR_utils.act_h_m(14000)
end
function have_pri_special_trader_mlr_6()
	return MLR_utils.act_h_m(17000)
end
function have_pri_special_trader_mlr_9()
	return MLR_utils.act_h_m(17000)
end
function have_pri_special_trader_mlr_12()
	return MLR_utils.act_h_m(18000)
end
function have_pri_special_trader_mlr_7()
	return MLR_utils.act_h_m(19000)
end
function have_pri_special_trader_mlr_10()
	return MLR_utils.act_h_m(20000)
end
function have_pri_special_trader_mlr_11()
	return MLR_utils.act_h_m(24000)
end
function have_money_to_stancia_guid_pri()
	return MLR_utils.act_h_m(12000)
end
function have_pri_special_trader_mlr_17()
	return MLR_utils.act_h_m(50000)
end
function have_pri_special_trader_mlr_15()
	return MLR_utils.act_h_m(65000)
end
function have_pri_special_trader_mlr_16()
	return MLR_utils.act_h_m(70000)
end
function have_pri_special_trader_mlr_14()
	return MLR_utils.act_h_m(75000)
end
function have_pri_special_trader_mlr_13()
	return MLR_utils.act_h_m(100000)
end
function have_pri_special_trader_mlr_18()
	return MLR_utils.act_h_m(150000)
end
function have_money_povars_ammo_pkm_100()
        return MLR_utils.act_h_m(7000)
end
function have_information_about_stash_barmen()
	return MLR_utils.act_h_m(15000)
end
-- Конец прекондишнов на бабло



-- Начало прекондишнов на наличие предметов
function has_wpn_protecta_task_noah_1(first_speaker, second_speaker)
	return MLR_utils.act_h_s('wpn_protecta', 1)
end 
function has_1_11_af_medusa_kmb(first_speaker, second_speaker)
	return MLR_utils.act_h_s('af_medusa', 1)
end 
function have_blackbox_mlr(first_speaker, second_speaker)
	return MLR_utils.act_h_s('blackbox_mlr', 1)
end 
function have_pri_a18_barter_9_19(first_speaker, second_speaker)
	return MLR_utils.act_h_s('ammo_9x19_fmj', 200)
end 
function have_pri_a18_barter_5_56(first_speaker, second_speaker)
	return MLR_utils.act_h_s('ammo_5.56x45_ss190', 300)
end 
function have_pri_a18_barter_f1(first_speaker, second_speaker)
	return MLR_utils.act_h_s('grenade_f1', 20)
end 
function have_pri_a18_barter_rgd5(first_speaker, second_speaker)
	return MLR_utils.act_h_s('grenade_rgd5', 10)
end 
function have_duty_patch_15(first_speaker, second_speaker)
	return MLR_utils.act_h_s('duty_patch', 15)
end 
function have_duty_patch_20(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('duty_patch', 20)
end
function have_duty_patch_50(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('duty_patch', 50)
end 
function have_duty_patch_65(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('duty_patch', 65)
end 
function have_duty_patch_100(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('duty_patch', 100)
end 
function have_csky_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('csky_patch', 10)
end 
function have_freedom_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('freedom_patch', 10)
end 
function have_stalker_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('stalker_patch', 10)
end 
function have_ecolog_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('ecolog_patch', 10)
end 
function have_bandit_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('bandit_patch', 10)
end 
function have_duty_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('duty_patch', 10)
end 
function have_monolith_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('monolith_patch', 10)
end 
function have_army_patch_for_lottery_10(first_speaker, second_speaker)
	return MLR_utils.act_h_s('army_patch', 10)
end 
function have_csky_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('csky_patch', 50)
end 
function have_freedom_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('freedom_patch', 50)
end 
function have_stalker_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('stalker_patch', 50)
end 
function have_ecolog_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('ecolog_patch', 50)
end 
function have_bandit_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('bandit_patch', 50)
end 
function have_duty_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('duty_patch', 50)
end 
function have_monolith_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('monolith_patch', 50)
end 
function have_army_patch_for_lottery_50(first_speaker, second_speaker)
	return MLR_utils.act_h_s('army_patch', 50)
end

function have_vodka5(first_speaker, second_speaker)
	return MLR_utils.act_h_s('vodka', 5) 
end 
function have_vodka10(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('vodka', 10) 
end 
function have_vodka20(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('vodka', 20) 
end
function have_vodka15(first_speaker, second_speaker) 
	return MLR_utils.act_h_s('vodka', 15) 
end

function has_mlr_x8_documents()
	return MLR_utils.act_h_s('mlr_x8_documents')
end
function has_mlr_x8_copybook()
	return MLR_utils.act_h_s('mlr_x8_copybook')
end
function has_mlr_x8_copybook_2()
	return MLR_utils.act_h_s('mlr_x8_copybook_2')
end
function has_controller_brain()
	return MLR_utils.act_h_s('mutant_part_controller_glass')
end
function has_mlr_x8_documents()
	return MLR_utils.act_h_s('mlr_x8_documents')
end
function has_af_electra_flash()
	return MLR_utils.act_h_s('af_electra_flash')
end
function has_af_electra_moonlight()
	return MLR_utils.act_h_s('af_electra_moonlight')
end
function has_af_soul()
	return MLR_utils.act_h_s('af_soul')
end
function has_af_vyvert()
	return MLR_utils.act_h_s('af_vyvert')
end
-- Конец прекондишнов на наличие предметов



-- Начало отбирания предметов у актора
function take_wpn_protecta_noah_task_1(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "wpn_protecta",1)
end
function take_af_electra_flash(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_electra_flash",1)
end
function take_af_electra_moonlight(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_electra_moonlight",1)
end
function take_af_soul(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_soul",1)
end
function take_af_vyvert(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_vyvert",1)
end
function take_blackbox_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "blackbox_mlr",1)
end
function take_pri_a18_barter_9_19(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "ammo_9x19_fmj",200)
end
function take_pri_a18_barter_5_56(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "ammo_5.56x45_ss190",300)
end
function take_pri_a18_barter_f1(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "grenade_f1",20)
end
function take_pri_a18_barter_rgd5(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "grenade_rgd5",10)
end
function take_mlr_x8_documents(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "mlr_x8_documents")
end
function take_mlr_x8_copybook(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "mlr_x8_copybook")
end
function take_mlr_x8_copybook_2(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "mlr_x8_copybook_2")
end
function take_duty_patch_15(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",15)
end
function take_duty_patch_20(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",20)
end
function take_duty_patch_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",50)
end
function take_duty_patch_65(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",65)
end
function take_duty_patch_100(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",100)
end
function take_part_controller_glass(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "mutant_part_controller_glass")
end
function take_vodka5(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka",5)
end
function take_vodka10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka",10)
end
function take_vodka20(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka",20)
end
function take_vodka15(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "vodka",15)
end
function take_csky_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "csky_patch",10)
end
function take_duty_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",10)
end
function take_freedom_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "freedom_patch",10)
end
function take_stalker_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "stalker_patch",10)
end
function take_ecolog_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "ecolog_patch",10)
end
function take_bandit_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "bandit_patch",10)
end
function take_monolith_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "monolith_patch",10)
end
function take_army_patch_for_lottery_10(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "army_patch",10)
end
function take_csky_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "csky_patch",50)
end
function take_duty_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "duty_patch",50)
end
function take_freedom_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "freedom_patch",50)
end
function take_stalker_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "stalker_patch",50)
end
function take_ecolog_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "ecolog_patch",50)
end
function take_bandit_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "bandit_patch",50)
end
function take_monolith_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "monolith_patch",50)
end
function take_army_patch_for_lottery_50(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "army_patch",50)
end
-- Конец отбирания предметов у актора


-- relocate_item_section
-- Начало
function give_pri_a18_barter_9_19(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_9x18_pmm", "in",200)
end
function give_pri_a18_barter_5_56(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_5.45x39_fmj", "in",300)
end
function give_pri_a18_barter_f1(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_m209", "in",20)
end
function give_pri_a18_barter_rgd5(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_og-7b", "in",3)
end
function give_svd_ammo_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_7.62x54_7h1", "in",5)
end
function give_ammo_nato_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_5.56x45_ss190", "in",7)
end
function give_ammo_m209_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "ammo_m209", "in",20)
end
function give_army_grugs(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "medkit_army", "in",5)
end
function give_ecolog_grugs(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "medkit_scientic", "in",4)
end
function give_veles(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "detector_elite", "in",1)
end
function give_anabionic_drug(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "drug_anabiotic", "in",2)
end
-- Конец

-- Деньги актору
function total_reward_1000(actor,npc,p)
	dialogs.relocate_money(db.actor,math.random(tonumber(2000),tonumber(4000)),"in")
end
function total_reward_2500(actor,npc,p)
	dialogs.relocate_money(db.actor,math.random(tonumber(3500),tonumber(6000)),"in")
end
function total_reward_5000(actor,npc,p)
	dialogs.relocate_money(db.actor,math.random(tonumber(7000),tonumber(15000)),"in")
end
function take_money_from_army_blackbox(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 5000) 
end
function take_money_from_haron_blackbox(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 5000) 
end
function take_money_from_owl_blackbox(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 7500) 
end
function take_money_from_lidership_blackbox(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 10000) 
end

function goodwill_for_blackbox_monolith_reward(a,b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"monolith", 100})
end
function goodwill_for_blackbox_army_reward(a,b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"army", 100})
end
function goodwill_for_blackbox_csky_reward(a,b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"csky", 100})
end
function goodwill_for_blackbox_freedom_reward(a,b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"freedom", 100})
end
function goodwill_for_blackbox_killer_reward(a,b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"killer", 100})
end

function reward_for_blackbox_army()
	xr_statistic.inc_actor_reputation(150)
end

-- Начало отбирания денег у актора
function take_totaliz_1(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 1000) 
end
function take_totaliz_2(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 2500) 
end
function take_totaliz_5(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 5000) 
end

-- ================================== Modified by Tronex ====================================
-- Last modification: 2017/12/20
-- ==========================================================================================
--> prices of Snitch
function inf_trader_buy_transitions11(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 7000) 
end
function inf_trader_buy_transitions22(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 11000) 
end
function inf_trader_buy_transitions33(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 9000) 
end
function inf_trader_buy_transitions44(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 9000) 
end
function inf_trader_buy_transitions55(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 30000) 
end
function inf_trader_buy_transitions66(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 35000) 
end
-- ends here

function give_money_to_jupiter_guid_bar(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 6000) 
end
function sell_money_to_tech_yard_guid_marsh(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 800) 
end
function give_information_about_stash_barmen(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 15000) 
end
function sell_money_povars_ammo_pkm_100(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 7000)
end
function give_pri_special_trader_mlr_1(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 8000) 
end
function give_pri_special_trader_mlr_2(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 6500) 
end
function give_pri_special_trader_mlr_3(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 7000) 
end
function give_pri_special_trader_mlr_4(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 9500) 
end
function give_pri_special_trader_mlr_5(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 11000) 
end
function give_pri_special_trader_mlr_6(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 17000) 
end
function give_pri_special_trader_mlr_7(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 19000) 
end
function give_pri_special_trader_mlr_8(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 14000) 
end
function give_pri_special_trader_mlr_9(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 17000) 
end
function give_pri_special_trader_mlr_10(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 20000) 
end
function give_pri_special_trader_mlr_11(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 24000) 
end
function give_pri_special_trader_mlr_12(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 18000) 
end
function give_pri_special_trader_mlr_13(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 100000) 
end
function give_pri_special_trader_mlr_14(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 75000) 
end
function give_pri_special_trader_mlr_15(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 65000) 
end
function give_pri_special_trader_mlr_16(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 70000) 
end
function give_pri_special_trader_mlr_17(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 50000) 
end
function sell_money_darkscape_guid_military(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 3000)
end
function give_pri_special_trader_mlr_18(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 150000) 
end
function sell_money_agroprom_guid_military(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 5000)
end
function give_mil_to_yant_on_heli2(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 7000) 
end
function give_mil_to_yant_on_heli(first_speaker, second_speaker) 
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 10000) 
end
function sell_money_to_marsh_pump_water_guid_marsh(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 500)
end
function sell_money_to_marsh_post_guid_marsh(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 300)
end
function sell_money_to_radar_guid_pri(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 8000)
end
function sell_money_to_pripyat_guid_zat(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 5000)
end
function sell_money_to_stancia_guid_pri(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 12000)
end
function sell_money_to_zaton_guid_jup(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 2000)
end
function sell_money_to_pripyat_guid_jup(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 4000)
end
function sell_money_to_red_forest_guid_jup(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 2500)
end
function sell_money_to_jupiter_underground_guid_jup(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 1500)
end
function sell_money_to_yantar_guid_bar(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 3500)
end
function sell_money_to_military_guid_bar(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 1000)
end
function sell_money_to_garbage_guid_bar(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 700)
end
function sell_money_to_escape_guid_bar(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 3000)
end
function sell_money_to_escp_guid_mil(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 4500)
end
function sell_money_to_jupiter_guid_bar(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 6000)
end
function sell_money_povars_ammo_pkm_100(first_speaker, second_speaker)
	dialogs.relocate_money_from_actor(first_speaker, second_speaker, 7000)
end
-- Конец отбирания денег у актора



-- Начало дарим актору секцию
function give_staff_about_dog_marsh_part_two(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "bread", 3) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "conserva", 2) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "vodka", 2)  
end
function give_antirad_from_fanat(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "vodka_2")  
end
function give_freedom_set_mlr(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "svoboda_light_outfit")
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_mp5") 
end
function give_det_adva_from_fanat(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "detector_simple")  
end
function take_pri_special_trader_mlr_2(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_sig220_nimble")  
end
function take_pri_special_trader_mlr_3(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_usp_nimble")  
end
function take_pri_special_trader_mlr_4(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_mp5_nimble")  
end
function take_pri_special_trader_mlr_5(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_spas12_nimble")  
end
function take_pri_special_trader_mlr_6(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_protecta_nimble")  
end
function take_pri_special_trader_mlr_7(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_groza_nimble")  
end
function take_pri_special_trader_mlr_8(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_g36_nimble")  
end
function take_pri_special_trader_mlr_9(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_fn2000_nimble")  
end
function take_pri_special_trader_mlr_10(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_vintorez_nimble")  
end
function take_pri_special_trader_mlr_11(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_svu_nimble")  
end
function take_pri_special_trader_mlr_12(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_svd_nimble")  
end
function take_pri_special_trader_mlr_13(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "monolith_exo_outfit")  
end
function take_pri_special_trader_mlr_14(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "merc_exo_outfit")  
end
function take_pri_special_trader_mlr_15(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "bandit_exo_outfit")  
end
function take_pri_special_trader_mlr_16(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "monolith_scientific_outfit")  
end
function take_pri_special_trader_mlr_17(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "merc_scientific_outfit")  
end
function take_pri_special_trader_mlr_18(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_gauss")  
end
function take_pri_special_trader_mlr_1(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_desert_eagle_nimble") 
end
function give_sso_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "svoboda_scientific_outfit")
end
function give_wpn_svd_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_svd_nimble")
end
function give_seo_from_ashot_mlr(first_speaker, second_speaker)
    dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "svoboda_exo_outfit")
end
function lottery_present_low_1(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_electra_sparkler")  
end
function lottery_present_low_2(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_gravi")  
end
function lottery_present_low_3(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_blood")  
end
function lottery_present_low_4(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_electra_flash")  
end
function lottery_present_low_5(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_medusa")  
end
function lottery_present_low_6(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_cristall")  
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_electra_moonlight")
end
function lottery_present_medium_1(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_night_star")  
end
function lottery_present_medium_2(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_vyvert")  
end
function lottery_present_medium_3(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_dummy_glassbeads")  
end
function lottery_present_medium_4(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_soul")  
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_glass")  
end
function lottery_present_hight_1(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_gold_fish")  
end
function lottery_present_hight_2(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_fireball")  
end
function lottery_present_hight_3(first_speaker, second_speaker) 
dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_baloon")
end
-- Конец дарим актору секцию



-- Начало спавн
function spawn_1_11_af_medusa_kmb(first_speaker, second_speaker)
alife(alife_pripyat):create("af_medusa",vector():set(-249.45230102539,-13.491371154785,-29.858497619629),12990,386)
end
function spawn_povars_12_70(first_speaker, second_speaker)
alife(l08_yantar):create("ammo_12x70_buck",vector():set(25.263544082642,-11.879564285278,-234.06251525879),77114,2198)
alife(l08_yantar):create("ammo_12x70_buck",vector():set(25.263544082642,-11.879564285278,-234.06251525879),77114,2198)
alife(l08_yantar):create("ammo_12x70_buck",vector():set(25.263544082642,-11.879564285278,-234.06251525879),77114,2198)
end
function spawn_povars_ammo_pkm_100(first_speaker, second_speaker)
alife(l08_yantar):create("ammo_pkm_100",vector():set(24.468368530273,-11.879601478577,-233.92230224609),76786,2198)
alife(l08_yantar):create("ammo_pkm_100",vector():set(24.468368530273,-11.879601478577,-233.92230224609),76786,2198)
alife(l08_yantar):create("ammo_pkm_100",vector():set(24.468368530273,-11.879601478577,-233.92230224609),76786,2198)
end
function spawn_povars_9_18_6(first_speaker, second_speaker)
	alife(l08_yantar):create("ammo_9x18_fmj",vector():set(24.277013778687,-11.879712104797,-235.83306884766),76716,2192)
	alife(l08_yantar):create("ammo_9x18_fmj",vector():set(24.277013778687,-11.879712104797,-235.83306884766),76716,2192)
	alife(l08_yantar):create("ammo_9x18_fmj",vector():set(24.277013778687,-11.879712104797,-235.83306884766),76716,2192)
	alife(l08_yantar):create("ammo_9x18_fmj",vector():set(24.277013778687,-11.879712104797,-235.83306884766),76716,2192)
end
function spawn_povars_5_45_3(first_speaker, second_speaker)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(27.18074798584,-11.879580497742,-235.37548828125),77997,2192)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(27.18074798584,-11.879580497742,-235.37548828125),77997,2192)
end
function spawn_povars_5_45_6(first_speaker, second_speaker)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(25.632678985596,-11.879641532898,-236.07833862305),77336,2192)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(25.632678985596,-11.879641532898,-236.07833862305),77336,2192)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(25.632678985596,-11.879641532898,-236.07833862305),77336,2192)
	alife(l08_yantar):create("ammo_5.45x39_fmj",vector():set(25.632678985596,-11.879641532898,-236.07833862305),77336,2192)
end
function spawn_povars_7_62(first_speaker, second_speaker)
	alife(l08_yantar):create("ammo_7.62x54_7h1",vector():set(25.421190261841,-11.879846572876,-234.63436889648),350540,2192)
end
function spawn_povars_berill(first_speaker, second_speaker)
	alife(l08_yantar):create("specops_outfit",vector():set(26.491174697876,-11.879890441895,-234.46711730957),77660,2192)
end
-- Конец спавн


function teleport_for_totaliz(first_speaker, second_speaker) 
	local box = get_story_object("bar_arena_inventory_box")
	if (box) then
		local function transfer_object_item(item)
			db.actor:transfer_item(item, box)
		end
		db.actor:inventory_for_each(transfer_object_item)
	level.add_pp_effector ("fade_in.ppe", 200, false)
	db.actor:set_actor_position(vector():set(139.61517333984,-13.390427589417,100.86038208008),37564,1710)
end 
	local spawn_items = {}	
	if	has_alife_info("totaliz_money_has_gone") then 
		table.insert(spawn_items, "wpn_binoc")		
	end
	local k,v = 0,0
	for k,v in pairs(spawn_items) do
		alife():create(v,	
						db.actor:position(),
						db.actor:level_vertex_id(),	
						db.actor:game_vertex_id(), 
						db.actor:id())
	end	
end	
function marsh_post_guid(first_speaker, second_speaker) 
	level.add_pp_effector ("fade_in.ppe", 200, false)
	db.actor:set_actor_position(vector():set(-294.81405639648,0.71730107069016,21.673492431641),3145,153)
end 
function marsh_pump_water_guid(first_speaker, second_speaker) 
	level.add_pp_effector ("fade_in.ppe", 200, false)
	db.actor:set_actor_position(vector():set(-5.7512526512146,-0.0069572627544403,-22.48962020874),140026,19)
end 
function marsh_old_church_guid(first_speaker, second_speaker) 
	level.add_pp_effector ("fade_in.ppe", 200, false)
	db.actor:set_actor_position(vector():set(314.69299316406,0.8691970705986,-134.10293579102),344628, 222)
end 
function marsh_tech_yard_guid(first_speaker, second_speaker) 
	level.add_pp_effector ("fade_in.ppe", 200, false)
	db.actor:set_actor_position(vector():set(381.63909912109,2.7934539318085,243.89410400391),392419, 98)
end 

function task_find_inf_inx_8_mlr_start()            
	task_manager.get_task_manager():give_task("task_find_inf_inx_8_mlr")            
end

function disable_pri_special_trader_mlr_1(first_speaker, second_speaker)
	db.actor:disable_info_portion("pri_special_trader_mlr_order_in_process")
	db.actor:disable_info_portion("pri_special_trader_mlr_order_is_ready")
	db.actor:disable_info_portion("order_pri_mlr_is_done")
	db.actor:disable_info_portion("cancel_new_orders_pri_mlr")
end

function lottery_present_medium_5(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_electra_moonlight")
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_lr300") 
	dialogs.relocate_item_section(second_speaker, "ammo_5.56x45_ap", "in",3)  
	dialogs.relocate_item_section(second_speaker, "ammo_9x39_pab9", "in",3) 
end

function lottery_present_medium_6(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_gravi") 
	dialogs.relocate_item_section(second_speaker, "medkit_scientic", "in",5)  
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_colt1911")  
end

function lottery_present_medium_7(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_vyvert")  
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "detector_elite") 
	dialogs.relocate_item_section(second_speaker, "drug_anabiotic", "in",2)   
end

function lottery_present_hight_4(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "wpn_vintorez")
	dialogs.relocate_item_section(second_speaker, "ammo_9x39_ap", "in",6)  
end

function lottery_present_hight_5(first_speaker, second_speaker) 
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "merc_scientific_outfit")
	dialogs.relocate_item_section(second_speaker, "drug_anabiotic", "in",2)
	dialogs.relocate_item_section(second_speaker, "medkit_scientic", "in",5)
end

-- Закупки оптом
-- МЕДИКАМЕНТЫ
-- прекондишны
function have_to_buy_opt_bandage()
local cost = dialogs_mlr.get_cost_sect('bandage', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_medkit()
local cost = dialogs_mlr.get_cost_sect('medkit', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_antirad()
local cost = dialogs_mlr.get_cost_sect('antirad', 3) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_medkit_army()
local cost = dialogs_mlr.get_cost_sect('medkit_army', 4) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_medkit_scientic()
local cost = dialogs_mlr.get_cost_sect('medkit_scientic', 3) 
if db.actor:money() >= cost then 
return true 
end 
end


-- бабло
function sell_to_buy_opt_bandage(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('bandage', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end 

function sell_to_buy_opt_medkit(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit', 6) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_antirad(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('antirad', 3) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_medkit_army(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit_army', 4) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_medkit_scientic(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit_scientic', 3) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

-- товар
function give_buy_opt_bandage(first_speaker, second_speaker) 
local cost = dialogs_mlr.get_cost_sect('bandage', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "bandage", "in",8) 
end
end

function give_buy_opt_medkit(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit', 6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "medkit", "in",6) 
end
end

function give_buy_opt_antirad(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('antirad', 3) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "antirad", "in",3) 
end
end

function give_buy_opt_medkit_army(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit_army', 4) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "medkit_army", "in",4) 
end
end

function give_buy_opt_medkit_scientic(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('medkit_scientic', 3) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "medkit_scientic", "in",3) 
end
end


-- ПРОВИЗИЯ
-- прекондишны
function have_to_buy_opt_bread()
local cost = dialogs_mlr.get_cost_sect('bread', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_kolbasa()
local cost = dialogs_mlr.get_cost_sect('kolbasa', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_conserva()
local cost = dialogs_mlr.get_cost_sect('conserva', 4) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_vodka()
local cost = dialogs_mlr.get_cost_sect('vodka_3', 4) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_energy_drink()
local cost = dialogs_mlr.get_cost_sect('energy_drink', 5) 
if db.actor:money() >= cost then 
return true 
end 
end

-- деньги
function sell_to_buy_opt_bread(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('bread', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_kolbasa(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('kolbasa', 6) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_conserva(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('conserva', 4)  
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_vodka(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('vodka_3', 4) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_energy_drink(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('energy_drink', 5) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

-- товар
function give_buy_opt_bread(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('bread', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "bread", "in",8) 
end
end

function give_buy_opt_kolbasa(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('kolbasa', 6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "kolbasa", "in",6) 
end
end

function give_buy_opt_conserva(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('conserva', 4) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "conserva", "in",4) 
end
end

function give_buy_opt_vodka(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('vodka_3', 4) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "vodka_3", "in",4) 
end
end

function give_buy_opt_energy_drink(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('energy_drink', 5) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "energy_drink", "in",5) 
end
end

-- БОЕПРИПАСЫ
-- прекондишны
function have_to_buy_opt_9_18_fmj() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_fmj', 10) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_9_18_pmm()
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_pmm', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_9_19_fmj()
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_fmj', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_9_19_pbp()
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_pbp', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_11_43_fmj()
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_fmj', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_11_43_hyd()
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_hydro', 3) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_12_70_buck()
local cost = dialogs_mlr.get_cost_sect('ammo_12x70_buck', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_12_76_zhekan()
local cost = dialogs_mlr.get_cost_sect('ammo_12x76_zhekan', 4) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_5_45_39_fmj()
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_fmj', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_5_45_39_ap()
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_ap', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_5_56_45_fmj()
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ss190', 8) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_5_56_45_ap()
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ap', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_9_39_pab9()
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_pab9', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_9_39_ap()
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_ap', 3) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_7_62_54_7h1()
local cost = dialogs_mlr.get_cost_sect('ammo_7.62x54_7h1', 3) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_grenade_rgd5()
local cost = dialogs_mlr.get_cost_sect('grenade_rgd5', 6) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_grenade_f1()
local cost = dialogs_mlr.get_cost_sect('grenade_f1', 4) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_vog_25()
local cost = dialogs_mlr.get_cost_sect('ammo_vog-25', 5) 
if db.actor:money() >= cost then 
return true 
end 
end

function have_to_buy_opt_ammo_m209()
local cost = dialogs_mlr.get_cost_sect('ammo_m209', 5) 
if db.actor:money() >= cost then 
return true 
end 
end


-- деньги
function sell_to_buy_opt_9_18_fmj(first_speaker, second_speaker) 
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_fmj', 10) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_9_18_pmm(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_pmm', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_9_19_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_fmj', 8) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_9_19_pbp(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_pbp', 6) 
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_11_43_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_fmj', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_11_43_hyd(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_hydro', 3)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_12_70_buck(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_12x70_buck', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_12_76_zhekan(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_12x76_zhekan', 4)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_5_45_39_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_fmj', 8)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_5_45_39_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_ap', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_5_56_45_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ss190', 8)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_5_56_45_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ap', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_9_39_pab9(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_pab9', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_9_39_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_ap', 3)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_7_62_54_7h1(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_7.62x54_7h1', 3)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_grenade_rgd5(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('grenade_rgd5', 6)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_grenade_f1(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('grenade_f1', 4)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_vog_25(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_vog-25', 5)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

function sell_to_buy_opt_ammo_m209(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_m209', 5)
if db.actor:money() >= cost then 
dialogs.relocate_money_from_actor(first_speaker, second_speaker, cost) 
end 
end

-- товар
function give_buy_opt_9_18_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_fmj',10) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x18_fmj", "in",10) 
end
end

function give_buy_opt_9_18_pmm(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_pmm',8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x18_pmm", "in",8) 
end
end

function give_buy_opt_9_19_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_fmj',8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x19_fmj", "in",8) 
end
end

function give_buy_opt_9_19_pbp(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_pbp',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x19_pbp", "in",6) 
end
end

function give_buy_opt_11_43_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_fmj',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_11.43x23_fmj", "in",6) 
end
end

function give_buy_opt_11_43_hyd(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_hydro',3) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_11.43x23_hydro", "in",4) 
end
end

function give_buy_opt_12_70_buck(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_12x70_buck',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_12x70_buck", "in",6) 
end
end

function give_buy_opt_12_76_zhekan(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_12x76_zhekan',4) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_12x76_zhekan", "in",4) 
end
end

function give_buy_opt_ammo_5_45_39_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_fmj',8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_5.45x39_fmj", "in",8) 
end
end

function give_buy_opt_ammo_5_45_39_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_ap',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_5.45x39_ap", "in",6) 
end
end

function give_buy_opt_ammo_5_56_45_fmj(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ss190',8) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_5.56x45_ss190", "in",8) 
end
end

function give_buy_opt_ammo_5_56_45_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ap',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_5.56x45_ap", "in",6) 
end
end

function give_buy_opt_ammo_9_39_pab9(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_pab9',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x39_pab9", "in",6) 
end
end

function give_buy_opt_ammo_9_39_ap(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_ap',3) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_9x39_ap", "in",4) 
end
end

function give_buy_opt_7_62_54_7h1(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_7.62x54_7h1',3) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_7.62x54_7h1", "in",3) 
end
end

function give_buy_opt_grenade_rgd5(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('grenade_rgd5',6) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "grenade_rgd5", "in",6) 
end
end

function give_buy_opt_grenade_f1(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('grenade_f1',4) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "grenade_f1", "in",4) 
end
end

function give_buy_opt_ammo_vog_25(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_vog-25',5) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_vog-25", "in",5) 
end
end

function give_buy_opt_ammo_m209(first_speaker, second_speaker)
local cost = dialogs_mlr.get_cost_sect('ammo_m209',5) 
if db.actor:money() >= cost then 
dialogs.relocate_item_section(second_speaker, "ammo_m209", "in",5) 
end
end

function get_phrase_buy_opt_bandage() 
local cost = dialogs_mlr.get_cost_sect('bandage', 8)
local str = game.translate_string('st_bandage_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_medkit() 
local cost = dialogs_mlr.get_cost_sect('medkit', 6)
local str = game.translate_string('st_medkit_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_antirad() 
local cost = dialogs_mlr.get_cost_sect('antirad', 3)
local str = game.translate_string('st_antirad_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_medkit_army() 
local cost = dialogs_mlr.get_cost_sect('medkit_army', 4)
local str = game.translate_string('st_medkit_army_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_medkit_scientic() 
local cost = dialogs_mlr.get_cost_sect('medkit_scientic', 3)
local str = game.translate_string('st_medkit_scientic_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_bread() 
local cost = dialogs_mlr.get_cost_sect('bread', 8)
local str = game.translate_string('st_bread_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_kolbasa() 
local cost = dialogs_mlr.get_cost_sect('kolbasa', 6)
local str = game.translate_string('st_kolbasa_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_conserva() 
local cost = dialogs_mlr.get_cost_sect('conserva', 4)
local str = game.translate_string('st_conserva_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_vodka() 
local cost = dialogs_mlr.get_cost_sect('vodka', 4)
local str = game.translate_string('st_vodka_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_energy_drink() 
local cost = dialogs_mlr.get_cost_sect('energy_drink', 5)
local str = game.translate_string('st_energy_drink_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_18_fmj() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_fmj', 10)
local str = game.translate_string('st_ammo_9_18_fmj_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_18_pmm() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x18_pmm', 8)
local str = game.translate_string('st_ammo_9_18_pmm_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_19_fmj() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_fmj', 8)
local str = game.translate_string('st_ammo_9_19_fmj_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_19_pbp() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x19_pbp', 6)
local str = game.translate_string('st_ammo_9_19_pbp_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_11_43_23_fmj() 
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_fmj', 6)
local str = game.translate_string('st_ammo_11_43_23_fmj_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_11_43_23_hydro() 
local cost = dialogs_mlr.get_cost_sect('ammo_11.43x23_hydro', 3)
local str = game.translate_string('st_ammo_11_43_23_hydro_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_12_70_buck() 
local cost = dialogs_mlr.get_cost_sect('ammo_12x70_buck', 6)
local str = game.translate_string('st_ammo_12_70_buck_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_12_76_zhekan() 
local cost = dialogs_mlr.get_cost_sect('ammo_12x76_zhekan', 4)
local str = game.translate_string('st_ammo_12_76_zhekan_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_5_45_39_fmj() 
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_fmj', 8)
local str = game.translate_string('st_ammo_5_45_39_fmj_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_5_45_39_ap() 
local cost = dialogs_mlr.get_cost_sect('ammo_5.45x39_ap', 6)
local str = game.translate_string('st_ammo_5_45_39_ap_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_5_56_45_ss190() 
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ss190', 8)
local str = game.translate_string('st_ammo_5_56_45_ss190_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_5_56_45_ap() 
local cost = dialogs_mlr.get_cost_sect('ammo_5.56x45_ap', 6)
local str = game.translate_string('st_ammo_5_56_45_ap_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_39_pab9() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_pab9', 6)
local str = game.translate_string('st_ammo_9_39_pab9_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_9_39_ap() 
local cost = dialogs_mlr.get_cost_sect('ammo_9x39_ap', 3)
local str = game.translate_string('st_ammo_9_39_ap_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_7_62_54_7h1() 
local cost = dialogs_mlr.get_cost_sect('ammo_7.62x54_7h1', 3)
local str = game.translate_string('st_ammo_7_62_54_7h1_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_grenade_rgd5() 
local cost = dialogs_mlr.get_cost_sect('grenade_rgd5', 6)
local str = game.translate_string('st_grenade_rgd5_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_grenade_f1() 
local cost = dialogs_mlr.get_cost_sect('grenade_f1', 4)
local str = game.translate_string('st_grenade_f1_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_vog_25() 
local cost = dialogs_mlr.get_cost_sect('ammo_vog-25', 5)
local str = game.translate_string('st_ammo_vog_25_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

function get_phrase_buy_opt_ammo_m209() 
local cost = dialogs_mlr.get_cost_sect('ammo_m209', 5)
local str = game.translate_string('st_ammo_m209_opt')..' %c[255,238,153,26]['..cost..']'
return str 
end

-- Прочее в плане геймплея

local community = {
	["stalker"] = "Free Stalkers",
	["monolith"] = "Monolith",
	["csky"] = "Clear Sky",
	["army"] = "Military",
	["bandit"] = "Bandits",
	["killer"] = "Mercenaries",
	["ecolog"] = "Ecologists",
	["dolg"] = "Duty",
	["freedom"] = "Freedom",
	["zombied"] = "Zombies",
	["trader"] = "Traders"
}

function show_rep_change_message(tsk_giver_npc_id)
	local tsk_giver_npc = level.object_by_id(tsk_giver_npc_id)
	if (axr_main.config:r_value("mm_options","enable_show_tip_reputation_option",1,true)) and tsk_giver_npc ~= nil and tsk_giver_npc:character_community() ~= nil then
		local rep_message = "Your reputation with "..community[tsk_giver_npc:character_community()].." is now "..tostring(relation_registry.community_goodwill(tsk_giver_npc:character_community(), db.actor:id()))..""
		rep_message = game.translate_string(rep_message)
		local rep_message_title = "Your reputation has changed"
		rep_message_title = game.translate_string(rep_message_title)
		db.actor:give_game_news(rep_message_title, rep_message, "ui_inGame2_PD_storonnik_ravnovesiya", 5000, 10000)
	end
end

function control()
	local chance = 0.5
	if (math.random() < chance) then
		--if (not has_alife_info("completionist") and not has_alife_info("sim_stalker_help_harder")) then
			if (db.actor:money() >= 500) then
				message_robbery()
			end
		--end
	end
end

function message_robbery()
	local amount = math.floor(db.actor:money()*math.random(25,50)/100)
	db.actor:give_money(-amount)
	db.actor:give_game_news("You were robbed while sleeping and have lost: ", game.translate_string(tostring(amount)), "ui_inGame2_Dengi_otdani", 0, 3000)
end

--вступление в группировки
function actor_set_freedom(actor, npc)
   db.actor:set_character_community("actor_freedom",0,0)
   disguise.update_default("freedom")
   news_manager.send_tip(db.actor, game.translate_string("st_actor_in_freedom"))
   xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"freedom", 5000})
end

function actor_set_stalker(actor, npc)
   db.actor:set_character_community("actor_stalker",0,0)
   disguise.update_default("stalker")
   news_manager.send_tip(db.actor, game.translate_string("st_actor_in_stalker"))
end

function merc_pri_grifon_mlr_task_target(task_id,field,p,tsk)
	if (field == "target") then
		if (task_id == "esc_m_trader_task_1") then
			if (tsk.stage == 1) then
				return tsk.task_giver_id
			end

			local smart = SIMBOARD.smarts_by_names["pri_b304_monsters_smart_terrain"]
			local target_id = db.actor and utils.load_var(db.actor,"merc_pri_grifon_mlr_task_3_target_id")
			local se_target = target_id and alife_object(target_id)

			if (se_target and smart.position:distance_to_sqr(se_target.position) > 2500) then
				return target_id
			end

			return smart and smart.id or nil
		end
	end
end

--function good_psi_helmet_protect_from_psi(h,bone_id,return_flag)
--	if h.type == 4 and db.actor:object("good_psy_helmet") ~= nil then 
--        return_flag.ret_value = false
--	end 
--end

function get_cost_sect(section, count)
    local cost = system_ini():r_s32(section, 'cost')
    return cost and cost * (count or 1)
end

--function actor_on_before_hit(h,bone_id,return_flag)
--    if h.type == 4 then
--    if db.actor:character_community() == "actor_monolith" or db.actor:character_community() == "actor_zombied" or db.actor:object("good_psy_helmet") ~= nil then
--			return_flag.ret_value = false
--		end
--		end
--    if h.type == 3 and db.actor:character_community() == "actor_zombied" then
--        return_flag.ret_value = false
--    end
--end

--function on_game_start()
--    RegisterScriptCallback("actor_on_before_hit",actor_on_before_hit)
--end