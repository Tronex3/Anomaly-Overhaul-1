
-- =======================================================================================
-- Created by Tronex
-- Last modification: 2018/7/20
-- A group of utility functions to be called and used by other scripts
-- =======================================================================================

local ini = system_ini()

local clr_table = {
	["white"]  = {255, 250, 250, 250},
	["gray"]   = {255, 170, 170, 170},
	["dark"]   = {0,140,140,140},
	["blue"]   = {0,153,255,255},
	["orange"] = {255,238,153,26},
	["red"]    = {0,204,0,51},
	["purple"] = {0,93,0,116},
	["green"]  = {0,51,255,102},
	["yellow"] = {0,250,250,0}
}

function get_clr (str , code) -- return color code as string or table
	local color, color_s
	if str then
		color = clr_table[str]
	else
		color = {255, 170, 170, 170}
	end
	color_s = strformat("%c[%s,%s,%s,%s]",color[1],color[2],color[3],color[4])
	
	if code then
		return color
	end
	return color_s
end

function get_item_axis (sec) -- return table of item's axis (x1, y1, x2, y2, width, height)
	local a = {}
		
	local inv_grid_x = ini:r_float_ex (sec,"inv_grid_x") or 0
	local inv_grid_y = ini:r_float_ex (sec,"inv_grid_y") or 0
	local inv_grid_width = ini:r_float_ex (sec,"inv_grid_width") or 0
	local inv_grid_height = ini:r_float_ex (sec,"inv_grid_height") or 0
	
	local x1 = inv_grid_x*50
	local y1 = inv_grid_y*50

	local w = inv_grid_width*50
	local h = inv_grid_height*50

	local x2 = x1 + w
	local y2 = y1 + h
	
	a.x1 = x1
	a.y1 = y1
	a.x2 = x2
	a.y2 = y2
	a.w = w
	a.h = h
	
	return a
end

function get_multi_item (base , uses_1 , uses_2) -- used to combine/separate 2 items of the same type, return new item's section

	if (not base) or (not uses_1) or (not uses_2) then
		return
	end
	
	-- Items with charges
	local charges = ini:r_float_ex(base,"uses_charges") or false
	if charges then
		local str = string.sub(base,1,-2) -- remove last character
		local tbl = {str}
		for i=1,charges do
			if (ini:section_exist(str .. tostring(i))) then
				tbl[#tbl+1] = str .. tostring(i)
			end
		end
		for i=1,#tbl do
			local uses_new = ini:r_float_ex(tbl[i],"uses_index")
			if (ini:r_string_ex(tbl[i],"uses_base") == base) and (uses_new == utils.round(uses_1 + uses_2, 2)) then 
				return tbl[i]
			end
		end
	
	-- Items with special section name
	elseif (string.sub(base, string.len(base)-1, string.len(base)-1) == "_") then
		local str = string.sub(base,1,-3) -- remove last 2 characters
		local tbl = {str,base}
		local n = 2
		while ini:section_exist(str .. "_" .. tostring(n)) do
			tbl[#tbl+1] = str .. "_" .. tostring(n)
			n = n + 1
		end
		for i=1,#tbl do
			local uses_new = ini:r_float_ex(tbl[i],"uses_index")
			if (ini:r_string_ex(tbl[i],"uses_base") == base) and (uses_new == utils.round(uses_1 + uses_2, 2)) then 
				return tbl[i]
			end
		end
	
	-- Everything else
	else
		uses_new = utils.round(uses_1 + uses_2, 2)
		local sec = base .. "_" .. tostring(uses_new)
		if (uses_1 == 2) and (uses_2 == -1) then
			sec = base
		end
		return sec
	end
	
	return nil
end